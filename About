# TDF-AWSAmplify
README:

A project using React, AWS Amplify, S3, API and DynamoDB

This React application integrates AWS Amplify for user authentication, enabling user registration and login functionalities. Once authenticated, users access a web page featuring a static image fetched from S3. The page also includes a form for submitting service requests, with details stored in DynamoDB upon submission.

Create a AWS free tier account 
https://aws.amazon.com/account/ 

Create an IAM Role and assign Administration access.

Open the terminal and give the below commands to install AWS Amplify

npm install -g @aws-amplify/cli
amplify configure
npx create-react-app exploreaws //(name of app)
cd exploreaws 

Add Authentication:

amplify add auth
amplify push

npm install aws-amplify @aws-amplify/ui-react

Now, In App.js, enter the code to perform authentication via aws amplify. Then run the application.

npm start

If any package missing issue is faced while running the app, install it. I got an error with ajv. 

Once Auth is set, register with email and password and signin. In AWS Cognito, a user pool is created where the user details are saved. 

Now, create a UI for handling user servicerequest using react, useState and useEffect. The form includes all the validations as mentioned below:

Service Request Name: Short Text
Service Request Description: Long Text
Creation Date (DD/MM/YYYY): Date input
Severity: Dropdown (Low, Medium, High)
Resolution Date (DD/MM/YYYY):: Date input (to be automatically calculated, 5 days from creation date if severity is low, 3 days from creation date if severity is medium, 1 day from creation date if severity is High)
Reporter Name: Text input
Contact Information: Email input
Location: Text input

API and DynamoDB: 
Add the API to handle form submission. For this we have to create API using amplify.
In the terminal, use the command amplify add api
Choose the graphql API and set the auth to userpool that we have created to authenticate users. Give the API name and edit the schema of graphql with the inputs of form. Then use the command amplify push. Based on this schema of graphql, a DynamoDB will be created in AWS.
Import {generateClient} from ‘aws-amplify/api’
Const client = generateClient();
Now, this client is used to perform the API operation with graphql. There is a set of default queries and mutation generated by graphql and we can use that in our application. 

S3: 
For fetching a image from S3, first we have to add storage in our application. For this, give the below command in the terminal.
Amplify add storage
Select Content and give the S3 bucket name and set the auth as userpool since we want only authenticated users to access the view the image. 
Import getUrl from aws-amplify/storage and retrieve the image from S3 by accessing the imagekey and path.

